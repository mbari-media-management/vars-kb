dependencies {

  compile project(':vars-core')

  implementation 'com.google.code.gson:gson'
  implementation 'com.google.guava:guava'
  implementation 'com.sun.xml.bind:jaxb-core'
  implementation 'com.sun.xml.bind:jaxb-impl'
  implementation 'com.typesafe:config'
//  implementation 'javax.transaction:jta'
  implementation 'org.eclipse.persistence:org.eclipse.persistence.jpa'
  implementation 'org.jasypt:jasypt'
  implementation 'org.mbari:mbarix4j'
  implementation 'org.mbari.m3:m3-corelib'
  implementation 'org.slf4j:slf4j-api'
  testRuntimeOnly 'com.h2database:h2'
  testRuntimeOnly 'net.sourceforge.jtds:jtds'
  testRuntimeOnly 'org.apache.derby:derby'
  testRuntimeOnly 'org.apache.derby:derbyclient'
  testRuntimeOnly 'org.apache.derby:derbynet'
  testRuntimeOnly 'org.apache.derby:derbyshared'
  testRuntimeOnly 'org.apache.derby:derbytools'
}

task performJPAWeaving(type: JavaExec, dependsOn: "compileJava"){
  inputs.dir compileJava.destinationDir
  outputs.dir compileJava.destinationDir
  main "org.eclipse.persistence.tools.weaving.jpa.StaticWeave"
  args  "-loglevel",
        "FINE", 
        "-persistenceinfo",
        "src/main/resources",
        compileJava.destinationDir.getAbsolutePath(),
        compileJava.destinationDir.getAbsolutePath()
  classpath = configurations.compile
}

tasks.withType(Jar){
  dependsOn "performJPAWeaving"
}